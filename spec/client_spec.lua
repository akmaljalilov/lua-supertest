local supertest = require("velox.lua.supertest")
require("busted.runner")()
describe('', function()
    it(' GET / it should has status code 200', function(done)
        local req_body = '{"name":"Salom"}'
        supertest.new('http://localhost', 3000)
                 :post('/')
                 :send({ name = "Salom" })
                 :send(req_body)
                 :set({ ['Content-Type'] = 'application/json' })
                 :expect(200)
                 :expect({ input = "Salom" })
                 :expect('Content-Type', 'application/json; charset=utf-8')
                 :expect('Content-Length', 17)
                 :end_req(function(res, err)
            assert.has_no.errors(function()
                if err then
                    error(err)
                end
            end)
        end)
    end)
    it('POST / it should has status code 200', function(done)
        local req_body = '{"name":"Salom"}'
        supertest.new('http://localhost', 3000)
                 :get('/')
                 :set({ ['Content-Type'] = 'application/json' })
                 :set({ ['Content-Length'] = req_body:len() })
                 :expect(200)
                 :expect({ hope = "loop" })
                 :expect('content-Type', 'application/json; charset=utf-8')
                 :expect('Content-Length', 15)
                 :end_req(function(res, err)
            assert.has_no.errors(function()
                if err then
                    error(err)
                end
            end)
        end)
    end)
    it(' GET / it should has status code 200', function(done)
        supertest.new('https://localhost', 8000)
                 :get('/')
                 :expect(200)
                 :expect('Hello Lua')
                 :end_req(function(res, err)
            assert.has_no.errors(function()
                if err then
                    error(err)
                end
            end)
        end)
    end)
end)
